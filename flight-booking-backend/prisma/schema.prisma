// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int       @id @default(autoincrement()) @map("user_id")
  fullName     String    @map("full_name") @db.VarChar(100)
  email        String    @unique @db.VarChar(100)
  phone        String    @db.VarChar(20)
  passwordHash String    @map("password_hash") @db.VarChar(255)
  bookings     Booking[]

  @@map("users")
}

model Airport {
  id                Int      @id @default(autoincrement()) @map("airport_id")
  airportName       String   @map("airport_name") @db.VarChar(100)
  airportCode       String   @unique @map("airport_code") @db.VarChar(10)
  city              String   @db.VarChar(100)
  country           String   @db.VarChar(100)
  departureFlights  Flight[] @relation("DepartureAirport")
  arrivalFlights    Flight[] @relation("ArrivalAirport")

  @@map("airports")
}

model Flight {
  id                  Int       @id @default(autoincrement()) @map("flight_id")
  airline             String    @db.VarChar(100)
  flightNumber        String    @map("flight_number") @db.VarChar(20)
  departureAirportId  Int       @map("departure_airport_id")
  arrivalAirportId    Int       @map("arrival_airport_id")
  departureTime       DateTime  @map("departure_time")
  arrivalTime         DateTime  @map("arrival_time")
  price               Decimal   @db.Decimal(10, 2)
  availableSeats      Int       @map("available_seats")
  departureAirport    Airport   @relation("DepartureAirport", fields: [departureAirportId], references: [id])
  arrivalAirport      Airport   @relation("ArrivalAirport", fields: [arrivalAirportId], references: [id])
  bookings            Booking[]

  @@map("flights")
}

model Booking {
  id             Int         @id @default(autoincrement()) @map("booking_id")
  userId         Int         @map("user_id")
  flightId       Int         @map("flight_id")
  bookingDate    DateTime    @map("booking_date")
  totalPrice     Decimal     @map("total_price") @db.Decimal(10, 2)
  status         String      @db.VarChar(20)
  user           User        @relation(fields: [userId], references: [id])
  flight         Flight      @relation(fields: [flightId], references: [id])
  passengers     Passenger[]
  payments       Payment[]

  @@map("bookings")
}

model Passenger {
  id             Int      @id @default(autoincrement()) @map("passenger_id")
  bookingId      Int      @map("booking_id")
  fullName       String   @map("full_name") @db.VarChar(100)
  passportNumber String   @map("passport_number") @db.VarChar(20)
  dateOfBirth    DateTime @map("date_of_birth") @db.Date
  seatNumber     String   @map("seat_number") @db.VarChar(10)
  booking        Booking  @relation(fields: [bookingId], references: [id])

  @@map("passengers")
}

model Payment {
  id              Int      @id @default(autoincrement()) @map("payment_id")
  bookingId       Int      @map("booking_id")
  paymentMethod   String   @map("payment_method") @db.VarChar(50)
  paymentStatus   String   @map("payment_status") @db.VarChar(20)
  transactionDate DateTime @map("transaction_date")
  amount          Decimal  @db.Decimal(10, 2)
  booking         Booking  @relation(fields: [bookingId], references: [id])

  @@map("payments")
}